import { Book } from './Book';

export class Library {
    private acervo: Array<Book>;

    constructor() {
        this.acervo = new Array<Book>();
    }

    // M√©todo para adicionar um livro ao acervo
    public addBook(book: Book): boolean {

        const exists = this.acervo.some(b => b.codigo === book.codigo);

        if (!exists) {
            this.acervo.push(book);
            console.log(`[SRV-LIBRARY ‚úÖ] Livro adicionado: ${book.codigo} - ${book.titulo} (${book.autor})`);
            //console.log('Acervo atual:', this.acervo);
            return true;
        } else {
            console.log(`[SRV-LIBRARY üî¥] Livro com c√≥digo ${book.codigo} j√° existe no acervo.`);
            return false;
        }
    }

    // M√©todo para registrar um empr√©stimo de um livro
    public registerLoan(codigo: number): string {

        console.log(`[SRV-LIBRARY üü°] Tentando registrar empr√©stimo para o livro com c√≥digo: ${codigo}`);

        let book = this.acervo.find(book => book.codigo === codigo);
        if (!book) {
            console.log(`[SRV-LIBRARY üî¥] Livro com c√≥digo ${codigo} n√£o encontrado.`);
            return 'not_found';
        }
        if (!book.disponivel) {
            console.log(`[SRV-LIBRARY üî¥] Livro n√£o dispon√≠vel para empr√©stimo.`);
            return 'not_available';
        }

        book.disponivel = false;
        console.log(`[SRV-LIBRARY ‚úÖ] Empr√©stimo registrado para o livro: ${book.titulo}`);
        return 'success';
    }

    // M√©todo para registrar a devolu√ß√£o de um livro
    public registerReturn(codigo: number): string {

        console.log(`[SRV-LIBRARY üü°] Tentando registrar devolu√ß√£o para o livro com c√≥digo: ${codigo}`);

        let book = this.acervo.find(book => book.codigo === codigo);
        if (!book) {
            console.log(`[SRV-LIBRARY üî¥] Livro com c√≥digo ${codigo} n√£o encontrado.`);
            return 'not_found';
        }

        book.disponivel = true;
        console.log(`[SRV-LIBRARY ‚úÖ] Devolu√ß√£o registrada para o livro: ${book.titulo}`);
        return 'success';
    }

    // M√©todo para retornar todos os livros dispon√≠veis
    public listAvailableBooks(): Array<Book> {
        return this.acervo.filter(book => book.disponivel);
    }

    // M√©todo para retornar todos os livros do acervo
    public getAllBooks(): Array<Book> {
        return this.acervo;
    }
    
}